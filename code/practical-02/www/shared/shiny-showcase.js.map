{"version":3,"sources":["../assets/scripts/shiny-showcase.js"],"names":["findTextColPoint","node","col","cols","nodeType","nchar","nodeValue","replace","length","element","offset","firstChild","ret","nextSibling","findTextPoint","el","line","newlines","childId","childNodes","child","match","newlinere","exec","index","highlightSrcref","srcref","srcfile","document","createRange","getElementById","createElement","id","ref","code","start","end","range","parentNode","nodeName","setStartBefore","setStart","setEndAfter","setEnd","surroundContents","jQuery","stop","effect","window","Shiny","addCustomMessageHandler","message","isCodeAbove","setCodePosition","above","animate","animateCodeMs","newHostElement","currentHostElement","wellElement","$","fadeOut","fadeIn","tabs","removeChild","appendChild","setCodeHeightFromDocHeight","removeAttribute","body","scrollTop","top","readme","parentElement","innerHTML","hide","setAppCodeSxsWidths","trigger","appWidth","zoom","totalWidth","offsetWidth","app","width","toggleCodePosition","toggleClass","setInitialCodePosition","addClass","style","height","renderMarkdown","mdContent","content","innerText","Showdown","converter","makeHtml","resize","on","hljs","initHighlightingOnLoad"],"mappings":"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","file":"shiny-showcase.js","sourcesContent":["/*jshint browser:true, jquery:true, strict:false, curly:false, indent:2*/\n\n(function() {\n  var animateMs = 400;\n\n  // Given a DOM node and a column (count of characters), walk recursively\n  // through the node's siblings counting characters until the given number\n  // of characters have been found.\n  //\n  // If the given count is bigger than the number of characters contained by\n  // the node and its siblings, returns a null node and the number of\n  // characters found.\n  function findTextColPoint(node, col) {\n    var cols = 0;\n    if (node.nodeType === 3) {\n      var nchar = node.nodeValue.replace(/\\n/g, \"\").length;\n      if (nchar >= col) {\n        return { element: node, offset: col };\n      } else {\n        cols += nchar;\n      }\n    } else if (node.nodeType === 1 && node.firstChild) {\n      var ret = findTextColPoint(node.firstChild, col);\n      if (ret.element !== null) {\n        return ret;\n      } else {\n        cols += ret.offset;\n      }\n    }\n    if (node.nextSibling)\n      return findTextColPoint(node.nextSibling, col - cols);\n    else\n      return { element: null, offset: cols };\n  }\n\n  // Returns an object indicating the element containing the given line and\n  // column of text, and the offset into that element where the text was found.\n  //\n  // If the given line and column are not found, returns a null element and\n  // the number of lines found.\n  function findTextPoint(el, line, col) {\n    var newlines = 0;\n    for (var childId = 0; childId < el.childNodes.length; childId++) {\n      var child = el.childNodes[childId];\n      // If this is a text node, count the number of newlines it contains.\n      if (child.nodeType === 3) {  // TEXT_NODE\n        var newlinere = /\\n/g;\n        var match;\n        while ((match = newlinere.exec(child.nodeValue)) !== null) {\n          newlines++;\n          // Found the desired line, now find the column.\n          if (newlines === line) {\n            return findTextColPoint(child, match.index + col + 1);\n          }\n        }\n      }\n      // If this is not a text node, descend recursively to see how many\n      // lines it contains.\n      else if (child.nodeType === 1) { // ELEMENT_NODE\n        var ret = findTextPoint(child, line - newlines, col);\n        if (ret.element !== null)\n          return ret;\n        else\n          newlines += ret.offset;\n      }\n    }\n    return { element: null, offset: newlines };\n  }\n\n  // Draw a highlight effect for the given source ref. srcref is assumed to be\n  // an integer array of length 6, following the standard R format for source\n  // refs.\n  function highlightSrcref (srcref, srcfile) {\n    // Check to see if the browser supports text ranges (IE8 doesn't)\n    if (!document.createRange)\n      return;\n\n    // Check to see if we already have a marker for this source ref\n    var el = document.getElementById(\"srcref_\" + srcref);\n    if (!el) {\n      // We don't have a marker, create one\n      el = document.createElement(\"span\");\n      el.id = \"srcref_\" + srcref;\n      var ref = srcref;\n      var code = document.getElementById(srcfile.replace(/\\./g, \"_\") + \"_code\");\n      var start = findTextPoint(code, ref[0], ref[4]);\n      var end = findTextPoint(code, ref[2], ref[5]);\n\n      // If the insertion point can't be found, bail out now\n      if (start.element === null || end.element === null)\n         return;\n\n      var range = document.createRange();\n      // If the text points are inside different <SPAN>s, we may not be able to\n      // surround them without breaking apart the elements to keep the DOM tree\n      // intact. Just move the selection points to encompass the contents of\n      // the SPANs.\n      if (start.element.parentNode.nodeName === \"SPAN\" &&\n          start.element !== end.element) {\n        range.setStartBefore(start.element.parentNode);\n      } else {\n        range.setStart(start.element, start.offset);\n      }\n      if (end.element.parentNode.nodeName === \"SPAN\" &&\n          start.element !== end.element) {\n        range.setEndAfter(end.element.parentNode);\n      } else {\n        range.setEnd(end.element, end.offset);\n      }\n      range.surroundContents(el);\n    }\n    // End any previous highlight before starting this one\n    jQuery(el)\n      .stop(true, true)\n      .effect(\"highlight\", null, 1600);\n  }\n\n  // If this is the main Shiny window, wire up our custom message handler.\n  if (window.Shiny) {\n    Shiny.addCustomMessageHandler('reactlog', function(message) {\n      if (message.srcref && message.srcfile) {\n        highlightSrcref(message.srcref, message.srcfile);\n      }\n    });\n  }\n\n  var isCodeAbove = false;\n  var setCodePosition = function(above, animate) {\n    var animateCodeMs = animate ? animateMs : 1;\n\n    // set the source and targets for the tab move\n    var newHostElement = above ?\n      document.getElementById(\"showcase-sxs-code\") :\n      document.getElementById(\"showcase-code-inline\");\n    var currentHostElement = above ?\n      document.getElementById(\"showcase-code-inline\") :\n      document.getElementById(\"showcase-sxs-code\");\n\n    var metadataElement = document.getElementById(\"showcase-app-metadata\");\n    if (metadataElement === null) {\n      // if there's no app metadata, show and hide the entire well container\n      // when the code changes position\n      var wellElement = $(\"#showcase-well\");\n      if (above) {\n        wellElement.fadeOut(animateCodeMs);\n      } else {\n        wellElement.fadeIn(animateCodeMs);\n      }\n    }\n\n    $(currentHostElement).fadeOut(animateCodeMs, function() {\n      var tabs = document.getElementById(\"showcase-code-tabs\");\n      currentHostElement.removeChild(tabs);\n      newHostElement.appendChild(tabs);\n\n      // remove or set the height of the code\n      if (above) {\n        setCodeHeightFromDocHeight();\n      } else {\n        document.getElementById(\"showcase-code-content\").removeAttribute(\"style\");\n      }\n\n      $(newHostElement).fadeIn();\n      if (!above) {\n        // remove the applied width and zoom on the app container, and\n        // scroll smoothly down to the code's new home\n        document.getElementById(\"showcase-app-container\").removeAttribute(\"style\");\n        if (animate)\n          $(document.body).animate({ scrollTop: $(newHostElement).offset().top });\n      }\n      // if there's a readme, move it either alongside the code or beneath\n      // the app\n      var readme = document.getElementById(\"readme-md\");\n      if (readme !== null) {\n        readme.parentElement.removeChild(readme);\n        if (above) {\n          currentHostElement.appendChild(readme);\n          $(currentHostElement).fadeIn(animateCodeMs);\n        }\n        else\n          document.getElementById(\"showcase-app-metadata\").appendChild(readme);\n      }\n\n      // change the text on the toggle button to reflect the new state\n      document.getElementById(\"showcase-code-position-toggle\").innerHTML = above ?\n        '<i class=\"fa fa-level-down\"></i> show below' :\n        '<i class=\"fa fa-level-up\"></i> show with app';\n    });\n    if (above) {\n      $(document.body).animate({ scrollTop: 0 }, animateCodeMs);\n    }\n    $(newHostElement).hide();\n    isCodeAbove = above;\n    setAppCodeSxsWidths(above && animate);\n    $(window).trigger(\"resize\");\n  };\n\n  var setAppCodeSxsWidths = function(animate) {\n    var appTargetWidth = 960;\n    var appWidth = appTargetWidth;\n    var zoom = 1.0;\n    var totalWidth = document.getElementById(\"showcase-app-code\").offsetWidth;\n    if (totalWidth / 2 > appTargetWidth) {\n      // If the app can use only half the available space and still meet its\n      // target, take half the available space.\n      appWidth = totalWidth / 2;\n    } else if (totalWidth * 0.66 > appTargetWidth)  {\n      // If the app can meet its target by taking up more space (up to 66%\n      // of its container), take up more space.\n      appWidth = 960;\n    } else {\n      // The space is too narrow for the app and code to live side-by-side\n      // in a friendly way. Keep the app at 2/3 of the space but scale it.\n      appWidth = totalWidth * 0.66;\n      zoom = appWidth/appTargetWidth;\n    }\n    var app = document.getElementById(\"showcase-app-container\");\n    $(app).animate({\n        width: appWidth + \"px\",\n        zoom: (zoom*100) + \"%\"\n      }, animate ? animateMs : 0);\n  };\n\n  var toggleCodePosition = function() {\n    setCodePosition(!isCodeAbove, true);\n    $('#showcase-app-code').toggleClass('code-below').toggleClass('code-above');\n  };\n\n  // if the browser is sized to wider than 1350px, show the code next to the\n  // app by default\n  var setInitialCodePosition = function() {\n    //setCodePosition(false, false);\n    $('#showcase-app-code').addClass('code-below');\n  };\n  \n  // make the code scrollable to about the height of the browser, less space\n  // for the tabs\n  var setCodeHeightFromDocHeight = function() {\n    document.getElementById(\"showcase-code-content\").style.height =\n      $(window).height() + \"px\";\n  };\n\n  // if there's a block of markdown content, render it to HTML\n  var renderMarkdown = function() {\n    var mdContent = document.getElementById(\"showcase-markdown-content\");\n    if (mdContent !== null) {\n      // IE8 puts the content of <script> tags into innerHTML but\n      // not innerText\n      var content = mdContent.innerText || mdContent.innerHTML;\n      document.getElementById(\"readme-md\").innerHTML =\n        (new Showdown.converter()).makeHtml(content);\n    }\n  };\n\n  $(window).resize(function() {\n    if (isCodeAbove) {\n      setAppCodeSxsWidths(false);\n      setCodeHeightFromDocHeight();\n    }\n  });\n\n  window.toggleCodePosition = toggleCodePosition;\n\n  $(window).on(\"load\", setInitialCodePosition);\n  $(window).on(\"load\", renderMarkdown);\n\n  if (window.hljs)\n    hljs.initHighlightingOnLoad();\n})();\n"],"sourceRoot":"assets/scripts/"}